/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.resume.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.resume.model.Resume;
import com.resume.model.ResumeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Resume service. Represents a row in the &quot;resume_Resume&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.resume.model.ResumeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ResumeImpl}.
 * </p>
 *
 * @author Artyom
 * @see ResumeImpl
 * @see com.resume.model.Resume
 * @see com.resume.model.ResumeModel
 * @generated
 */
public class ResumeModelImpl extends BaseModelImpl<Resume>
	implements ResumeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a resume model instance should use the {@link com.resume.model.Resume} interface instead.
	 */
	public static final String TABLE_NAME = "resume_Resume";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "resumeId", Types.BIGINT },
			{ "resumeDate", Types.TIMESTAMP },
			{ "resumeText", Types.VARCHAR },
			{ "status", Types.INTEGER },
			{ "statusByUserId", Types.BIGINT },
			{ "statusByUserName", Types.VARCHAR },
			{ "statusDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table resume_Resume (uuid_ VARCHAR(75) null,resumeId LONG not null primary key,resumeDate DATE null,resumeText VARCHAR(75) null,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null,companyId LONG,groupId LONG,userId LONG)";
	public static final String TABLE_SQL_DROP = "drop table resume_Resume";
	public static final String ORDER_BY_JPQL = " ORDER BY resume.resumeId ASC, resume.resumeDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY resume_Resume.resumeId ASC, resume_Resume.resumeDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.resume.model.Resume"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.resume.model.Resume"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.resume.model.Resume"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long RESUMETEXT_COLUMN_BITMASK = 4L;
	public static long STATUS_COLUMN_BITMASK = 8L;
	public static long UUID_COLUMN_BITMASK = 16L;
	public static long RESUMEID_COLUMN_BITMASK = 32L;
	public static long RESUMEDATE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.resume.model.Resume"));

	public ResumeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _resumeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setResumeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _resumeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Resume.class;
	}

	@Override
	public String getModelClassName() {
		return Resume.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("resumeId", getResumeId());
		attributes.put("resumeDate", getResumeDate());
		attributes.put("resumeText", getResumeText());
		attributes.put("status", getStatus());
		attributes.put("statusByUserId", getStatusByUserId());
		attributes.put("statusByUserName", getStatusByUserName());
		attributes.put("statusDate", getStatusDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long resumeId = (Long)attributes.get("resumeId");

		if (resumeId != null) {
			setResumeId(resumeId);
		}

		Date resumeDate = (Date)attributes.get("resumeDate");

		if (resumeDate != null) {
			setResumeDate(resumeDate);
		}

		String resumeText = (String)attributes.get("resumeText");

		if (resumeText != null) {
			setResumeText(resumeText);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long statusByUserId = (Long)attributes.get("statusByUserId");

		if (statusByUserId != null) {
			setStatusByUserId(statusByUserId);
		}

		String statusByUserName = (String)attributes.get("statusByUserName");

		if (statusByUserName != null) {
			setStatusByUserName(statusByUserName);
		}

		Date statusDate = (Date)attributes.get("statusDate");

		if (statusDate != null) {
			setStatusDate(statusDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getResumeId() {
		return _resumeId;
	}

	@Override
	public void setResumeId(long resumeId) {
		_columnBitmask = -1L;

		_resumeId = resumeId;
	}

	@Override
	public Date getResumeDate() {
		return _resumeDate;
	}

	@Override
	public void setResumeDate(Date resumeDate) {
		_columnBitmask = -1L;

		_resumeDate = resumeDate;
	}

	@Override
	public String getResumeText() {
		if (_resumeText == null) {
			return StringPool.BLANK;
		}
		else {
			return _resumeText;
		}
	}

	@Override
	public void setResumeText(String resumeText) {
		_columnBitmask |= RESUMETEXT_COLUMN_BITMASK;

		if (_originalResumeText == null) {
			_originalResumeText = _resumeText;
		}

		_resumeText = resumeText;
	}

	public String getOriginalResumeText() {
		return GetterUtil.getString(_originalResumeText);
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (!_setOriginalStatus) {
			_setOriginalStatus = true;

			_originalStatus = _status;
		}

		_status = status;
	}

	public int getOriginalStatus() {
		return _originalStatus;
	}

	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getStatusByUserId(), "uuid",
			_statusByUserUuid);
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
		_statusByUserUuid = statusByUserUuid;
	}

	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		_statusByUserName = statusByUserName;
	}

	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		_statusDate = statusDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved}
	 */
	@Override
	public boolean getApproved() {
		return isApproved();
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Resume.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Resume toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Resume)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ResumeImpl resumeImpl = new ResumeImpl();

		resumeImpl.setUuid(getUuid());
		resumeImpl.setResumeId(getResumeId());
		resumeImpl.setResumeDate(getResumeDate());
		resumeImpl.setResumeText(getResumeText());
		resumeImpl.setStatus(getStatus());
		resumeImpl.setStatusByUserId(getStatusByUserId());
		resumeImpl.setStatusByUserName(getStatusByUserName());
		resumeImpl.setStatusDate(getStatusDate());
		resumeImpl.setCompanyId(getCompanyId());
		resumeImpl.setGroupId(getGroupId());
		resumeImpl.setUserId(getUserId());

		resumeImpl.resetOriginalValues();

		return resumeImpl;
	}

	@Override
	public int compareTo(Resume resume) {
		int value = 0;

		if (getResumeId() < resume.getResumeId()) {
			value = -1;
		}
		else if (getResumeId() > resume.getResumeId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getResumeDate(), resume.getResumeDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Resume)) {
			return false;
		}

		Resume resume = (Resume)obj;

		long primaryKey = resume.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ResumeModelImpl resumeModelImpl = this;

		resumeModelImpl._originalUuid = resumeModelImpl._uuid;

		resumeModelImpl._originalResumeText = resumeModelImpl._resumeText;

		resumeModelImpl._originalStatus = resumeModelImpl._status;

		resumeModelImpl._setOriginalStatus = false;

		resumeModelImpl._originalCompanyId = resumeModelImpl._companyId;

		resumeModelImpl._setOriginalCompanyId = false;

		resumeModelImpl._originalGroupId = resumeModelImpl._groupId;

		resumeModelImpl._setOriginalGroupId = false;

		resumeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Resume> toCacheModel() {
		ResumeCacheModel resumeCacheModel = new ResumeCacheModel();

		resumeCacheModel.uuid = getUuid();

		String uuid = resumeCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			resumeCacheModel.uuid = null;
		}

		resumeCacheModel.resumeId = getResumeId();

		Date resumeDate = getResumeDate();

		if (resumeDate != null) {
			resumeCacheModel.resumeDate = resumeDate.getTime();
		}
		else {
			resumeCacheModel.resumeDate = Long.MIN_VALUE;
		}

		resumeCacheModel.resumeText = getResumeText();

		String resumeText = resumeCacheModel.resumeText;

		if ((resumeText != null) && (resumeText.length() == 0)) {
			resumeCacheModel.resumeText = null;
		}

		resumeCacheModel.status = getStatus();

		resumeCacheModel.statusByUserId = getStatusByUserId();

		resumeCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = resumeCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			resumeCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			resumeCacheModel.statusDate = statusDate.getTime();
		}
		else {
			resumeCacheModel.statusDate = Long.MIN_VALUE;
		}

		resumeCacheModel.companyId = getCompanyId();

		resumeCacheModel.groupId = getGroupId();

		resumeCacheModel.userId = getUserId();

		return resumeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", resumeId=");
		sb.append(getResumeId());
		sb.append(", resumeDate=");
		sb.append(getResumeDate());
		sb.append(", resumeText=");
		sb.append(getResumeText());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusByUserId=");
		sb.append(getStatusByUserId());
		sb.append(", statusByUserName=");
		sb.append(getStatusByUserName());
		sb.append(", statusDate=");
		sb.append(getStatusDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.resume.model.Resume");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resumeId</column-name><column-value><![CDATA[");
		sb.append(getResumeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resumeDate</column-name><column-value><![CDATA[");
		sb.append(getResumeDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resumeText</column-name><column-value><![CDATA[");
		sb.append(getResumeText());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserId</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusByUserName</column-name><column-value><![CDATA[");
		sb.append(getStatusByUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDate</column-name><column-value><![CDATA[");
		sb.append(getStatusDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Resume.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Resume.class };
	private String _uuid;
	private String _originalUuid;
	private long _resumeId;
	private Date _resumeDate;
	private String _resumeText;
	private String _originalResumeText;
	private int _status;
	private int _originalStatus;
	private boolean _setOriginalStatus;
	private long _statusByUserId;
	private String _statusByUserUuid;
	private String _statusByUserName;
	private Date _statusDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private long _columnBitmask;
	private Resume _escapedModel;
}