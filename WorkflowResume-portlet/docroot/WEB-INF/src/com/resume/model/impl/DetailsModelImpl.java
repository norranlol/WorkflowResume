/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.resume.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.resume.model.Details;
import com.resume.model.DetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Details service. Represents a row in the &quot;resume_Details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.resume.model.DetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DetailsImpl}.
 * </p>
 *
 * @author Artyom
 * @see DetailsImpl
 * @see com.resume.model.Details
 * @see com.resume.model.DetailsModel
 * @generated
 */
public class DetailsModelImpl extends BaseModelImpl<Details>
	implements DetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a details model instance should use the {@link com.resume.model.Details} interface instead.
	 */
	public static final String TABLE_NAME = "resume_Details";
	public static final Object[][] TABLE_COLUMNS = {
			{ "detailsId", Types.BIGINT },
			{ "surname", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "patronymic", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "phonenumber", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "position", Types.VARCHAR },
			{ "education", Types.VARCHAR },
			{ "knowledge", Types.VARCHAR },
			{ "experience", Types.VARCHAR },
			{ "quailities", Types.VARCHAR },
			{ "additionally", Types.VARCHAR },
			{ "resumeId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table resume_Details (detailsId LONG not null primary key,surname VARCHAR(75) null,name VARCHAR(75) null,patronymic VARCHAR(75) null,address VARCHAR(75) null,phonenumber VARCHAR(75) null,email VARCHAR(75) null,position VARCHAR(75) null,education VARCHAR(75) null,knowledge VARCHAR(75) null,experience VARCHAR(75) null,quailities VARCHAR(75) null,additionally VARCHAR(75) null,resumeId LONG)";
	public static final String TABLE_SQL_DROP = "drop table resume_Details";
	public static final String ORDER_BY_JPQL = " ORDER BY details.resumeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY resume_Details.resumeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.resume.model.Details"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.resume.model.Details"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.resume.model.Details"),
			true);
	public static long EMAIL_COLUMN_BITMASK = 1L;
	public static long RESUMEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.resume.model.Details"));

	public DetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _detailsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDetailsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _detailsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Details.class;
	}

	@Override
	public String getModelClassName() {
		return Details.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("detailsId", getDetailsId());
		attributes.put("surname", getSurname());
		attributes.put("name", getName());
		attributes.put("patronymic", getPatronymic());
		attributes.put("address", getAddress());
		attributes.put("phonenumber", getPhonenumber());
		attributes.put("email", getEmail());
		attributes.put("position", getPosition());
		attributes.put("education", getEducation());
		attributes.put("knowledge", getKnowledge());
		attributes.put("experience", getExperience());
		attributes.put("quailities", getQuailities());
		attributes.put("additionally", getAdditionally());
		attributes.put("resumeId", getResumeId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long detailsId = (Long)attributes.get("detailsId");

		if (detailsId != null) {
			setDetailsId(detailsId);
		}

		String surname = (String)attributes.get("surname");

		if (surname != null) {
			setSurname(surname);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String patronymic = (String)attributes.get("patronymic");

		if (patronymic != null) {
			setPatronymic(patronymic);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String phonenumber = (String)attributes.get("phonenumber");

		if (phonenumber != null) {
			setPhonenumber(phonenumber);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String position = (String)attributes.get("position");

		if (position != null) {
			setPosition(position);
		}

		String education = (String)attributes.get("education");

		if (education != null) {
			setEducation(education);
		}

		String knowledge = (String)attributes.get("knowledge");

		if (knowledge != null) {
			setKnowledge(knowledge);
		}

		String experience = (String)attributes.get("experience");

		if (experience != null) {
			setExperience(experience);
		}

		String quailities = (String)attributes.get("quailities");

		if (quailities != null) {
			setQuailities(quailities);
		}

		String additionally = (String)attributes.get("additionally");

		if (additionally != null) {
			setAdditionally(additionally);
		}

		Long resumeId = (Long)attributes.get("resumeId");

		if (resumeId != null) {
			setResumeId(resumeId);
		}
	}

	@Override
	public long getDetailsId() {
		return _detailsId;
	}

	@Override
	public void setDetailsId(long detailsId) {
		_detailsId = detailsId;
	}

	@Override
	public String getSurname() {
		if (_surname == null) {
			return StringPool.BLANK;
		}
		else {
			return _surname;
		}
	}

	@Override
	public void setSurname(String surname) {
		_surname = surname;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getPatronymic() {
		if (_patronymic == null) {
			return StringPool.BLANK;
		}
		else {
			return _patronymic;
		}
	}

	@Override
	public void setPatronymic(String patronymic) {
		_patronymic = patronymic;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getPhonenumber() {
		if (_phonenumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _phonenumber;
		}
	}

	@Override
	public void setPhonenumber(String phonenumber) {
		_phonenumber = phonenumber;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_columnBitmask |= EMAIL_COLUMN_BITMASK;

		if (_originalEmail == null) {
			_originalEmail = _email;
		}

		_email = email;
	}

	public String getOriginalEmail() {
		return GetterUtil.getString(_originalEmail);
	}

	@Override
	public String getPosition() {
		if (_position == null) {
			return StringPool.BLANK;
		}
		else {
			return _position;
		}
	}

	@Override
	public void setPosition(String position) {
		_position = position;
	}

	@Override
	public String getEducation() {
		if (_education == null) {
			return StringPool.BLANK;
		}
		else {
			return _education;
		}
	}

	@Override
	public void setEducation(String education) {
		_education = education;
	}

	@Override
	public String getKnowledge() {
		if (_knowledge == null) {
			return StringPool.BLANK;
		}
		else {
			return _knowledge;
		}
	}

	@Override
	public void setKnowledge(String knowledge) {
		_knowledge = knowledge;
	}

	@Override
	public String getExperience() {
		if (_experience == null) {
			return StringPool.BLANK;
		}
		else {
			return _experience;
		}
	}

	@Override
	public void setExperience(String experience) {
		_experience = experience;
	}

	@Override
	public String getQuailities() {
		if (_quailities == null) {
			return StringPool.BLANK;
		}
		else {
			return _quailities;
		}
	}

	@Override
	public void setQuailities(String quailities) {
		_quailities = quailities;
	}

	@Override
	public String getAdditionally() {
		if (_additionally == null) {
			return StringPool.BLANK;
		}
		else {
			return _additionally;
		}
	}

	@Override
	public void setAdditionally(String additionally) {
		_additionally = additionally;
	}

	@Override
	public long getResumeId() {
		return _resumeId;
	}

	@Override
	public void setResumeId(long resumeId) {
		_columnBitmask = -1L;

		if (!_setOriginalResumeId) {
			_setOriginalResumeId = true;

			_originalResumeId = _resumeId;
		}

		_resumeId = resumeId;
	}

	public long getOriginalResumeId() {
		return _originalResumeId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Details.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Details toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Details)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DetailsImpl detailsImpl = new DetailsImpl();

		detailsImpl.setDetailsId(getDetailsId());
		detailsImpl.setSurname(getSurname());
		detailsImpl.setName(getName());
		detailsImpl.setPatronymic(getPatronymic());
		detailsImpl.setAddress(getAddress());
		detailsImpl.setPhonenumber(getPhonenumber());
		detailsImpl.setEmail(getEmail());
		detailsImpl.setPosition(getPosition());
		detailsImpl.setEducation(getEducation());
		detailsImpl.setKnowledge(getKnowledge());
		detailsImpl.setExperience(getExperience());
		detailsImpl.setQuailities(getQuailities());
		detailsImpl.setAdditionally(getAdditionally());
		detailsImpl.setResumeId(getResumeId());

		detailsImpl.resetOriginalValues();

		return detailsImpl;
	}

	@Override
	public int compareTo(Details details) {
		int value = 0;

		if (getResumeId() < details.getResumeId()) {
			value = -1;
		}
		else if (getResumeId() > details.getResumeId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Details)) {
			return false;
		}

		Details details = (Details)obj;

		long primaryKey = details.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DetailsModelImpl detailsModelImpl = this;

		detailsModelImpl._originalEmail = detailsModelImpl._email;

		detailsModelImpl._originalResumeId = detailsModelImpl._resumeId;

		detailsModelImpl._setOriginalResumeId = false;

		detailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Details> toCacheModel() {
		DetailsCacheModel detailsCacheModel = new DetailsCacheModel();

		detailsCacheModel.detailsId = getDetailsId();

		detailsCacheModel.surname = getSurname();

		String surname = detailsCacheModel.surname;

		if ((surname != null) && (surname.length() == 0)) {
			detailsCacheModel.surname = null;
		}

		detailsCacheModel.name = getName();

		String name = detailsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			detailsCacheModel.name = null;
		}

		detailsCacheModel.patronymic = getPatronymic();

		String patronymic = detailsCacheModel.patronymic;

		if ((patronymic != null) && (patronymic.length() == 0)) {
			detailsCacheModel.patronymic = null;
		}

		detailsCacheModel.address = getAddress();

		String address = detailsCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			detailsCacheModel.address = null;
		}

		detailsCacheModel.phonenumber = getPhonenumber();

		String phonenumber = detailsCacheModel.phonenumber;

		if ((phonenumber != null) && (phonenumber.length() == 0)) {
			detailsCacheModel.phonenumber = null;
		}

		detailsCacheModel.email = getEmail();

		String email = detailsCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			detailsCacheModel.email = null;
		}

		detailsCacheModel.position = getPosition();

		String position = detailsCacheModel.position;

		if ((position != null) && (position.length() == 0)) {
			detailsCacheModel.position = null;
		}

		detailsCacheModel.education = getEducation();

		String education = detailsCacheModel.education;

		if ((education != null) && (education.length() == 0)) {
			detailsCacheModel.education = null;
		}

		detailsCacheModel.knowledge = getKnowledge();

		String knowledge = detailsCacheModel.knowledge;

		if ((knowledge != null) && (knowledge.length() == 0)) {
			detailsCacheModel.knowledge = null;
		}

		detailsCacheModel.experience = getExperience();

		String experience = detailsCacheModel.experience;

		if ((experience != null) && (experience.length() == 0)) {
			detailsCacheModel.experience = null;
		}

		detailsCacheModel.quailities = getQuailities();

		String quailities = detailsCacheModel.quailities;

		if ((quailities != null) && (quailities.length() == 0)) {
			detailsCacheModel.quailities = null;
		}

		detailsCacheModel.additionally = getAdditionally();

		String additionally = detailsCacheModel.additionally;

		if ((additionally != null) && (additionally.length() == 0)) {
			detailsCacheModel.additionally = null;
		}

		detailsCacheModel.resumeId = getResumeId();

		return detailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{detailsId=");
		sb.append(getDetailsId());
		sb.append(", surname=");
		sb.append(getSurname());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", patronymic=");
		sb.append(getPatronymic());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", phonenumber=");
		sb.append(getPhonenumber());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", position=");
		sb.append(getPosition());
		sb.append(", education=");
		sb.append(getEducation());
		sb.append(", knowledge=");
		sb.append(getKnowledge());
		sb.append(", experience=");
		sb.append(getExperience());
		sb.append(", quailities=");
		sb.append(getQuailities());
		sb.append(", additionally=");
		sb.append(getAdditionally());
		sb.append(", resumeId=");
		sb.append(getResumeId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.resume.model.Details");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>detailsId</column-name><column-value><![CDATA[");
		sb.append(getDetailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>surname</column-name><column-value><![CDATA[");
		sb.append(getSurname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>patronymic</column-name><column-value><![CDATA[");
		sb.append(getPatronymic());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phonenumber</column-name><column-value><![CDATA[");
		sb.append(getPhonenumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>position</column-name><column-value><![CDATA[");
		sb.append(getPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>education</column-name><column-value><![CDATA[");
		sb.append(getEducation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>knowledge</column-name><column-value><![CDATA[");
		sb.append(getKnowledge());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>experience</column-name><column-value><![CDATA[");
		sb.append(getExperience());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quailities</column-name><column-value><![CDATA[");
		sb.append(getQuailities());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionally</column-name><column-value><![CDATA[");
		sb.append(getAdditionally());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resumeId</column-name><column-value><![CDATA[");
		sb.append(getResumeId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Details.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Details.class
		};
	private long _detailsId;
	private String _surname;
	private String _name;
	private String _patronymic;
	private String _address;
	private String _phonenumber;
	private String _email;
	private String _originalEmail;
	private String _position;
	private String _education;
	private String _knowledge;
	private String _experience;
	private String _quailities;
	private String _additionally;
	private long _resumeId;
	private long _originalResumeId;
	private boolean _setOriginalResumeId;
	private long _columnBitmask;
	private Details _escapedModel;
}